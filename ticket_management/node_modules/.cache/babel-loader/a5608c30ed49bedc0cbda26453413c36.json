{"ast":null,"code":"import { LOGIN, SIGNUP, COMPANY_DETAILS, ADD_TICKET, TICKET_REPORT, LOGOUT, VIEW_TICKET, EDIT_TICKET, GET_COMMENTS } from './actionTypes';\nexport const initState = {\n  loginSuccess: [],\n  signupSuccess: \"\",\n  companyData: [],\n  ticketMsg: [],\n  allUserTicket: [],\n  view_ticket: [],\n  editSuccess: \"\",\n  getComments: []\n};\nexport default ((state = initState, {\n  type,\n  payload\n}) => {\n  console.log(payload);\n\n  switch (type) {\n    case LOGIN:\n      if (payload.message === 'logged_in') return { ...state,\n        loginSuccess: payload\n      };else alert(payload.message);\n      break;\n\n    case SIGNUP:\n      alert(payload.message);\n      return { ...state,\n        signupSuccess: payload.message\n      };\n\n    case COMPANY_DETAILS:\n      return { ...state,\n        companyData: payload.data\n      };\n\n    case ADD_TICKET:\n      return { ...state,\n        ticketMsg: payload\n      };\n\n    case TICKET_REPORT:\n      return { ...state,\n        allUserTicket: payload.data,\n        editSuccess: \"\"\n      };\n\n    case LOGOUT:\n      return { ...state,\n        loginSuccess: []\n      };\n\n    case VIEW_TICKET:\n      return { ...state,\n        view_ticket: payload\n      };\n\n    case CHANGE_STATUS:\n      alert(\"status changed successfully\");\n      break;\n\n    case EDIT_TICKET:\n      alert(payload);\n      return { ...state,\n        editSuccess: payload\n      };\n\n    case GET_COMMENTS:\n      return { ...state,\n        getComments: payload.data\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/masai/Ticket-Management/ticket_management/src/Redux/reducer.js"],"names":["LOGIN","SIGNUP","COMPANY_DETAILS","ADD_TICKET","TICKET_REPORT","LOGOUT","VIEW_TICKET","EDIT_TICKET","GET_COMMENTS","initState","loginSuccess","signupSuccess","companyData","ticketMsg","allUserTicket","view_ticket","editSuccess","getComments","state","type","payload","console","log","message","alert","data","CHANGE_STATUS"],"mappings":"AAAA,SACIA,KADJ,EAEIC,MAFJ,EAGIC,eAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,MANJ,EAOIC,WAPJ,EAQIC,WARJ,EASIC,YATJ,QAUO,eAVP;AAaA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,YAAY,EAAE,EADO;AAErBC,EAAAA,aAAa,EAAC,EAFO;AAGrBC,EAAAA,WAAW,EAAE,EAHQ;AAIrBC,EAAAA,SAAS,EAAC,EAJW;AAKrBC,EAAAA,aAAa,EAAC,EALO;AAMrBC,EAAAA,WAAW,EAAC,EANS;AAOrBC,EAAAA,WAAW,EAAC,EAPS;AAQrBC,EAAAA,WAAW,EAAC;AARS,CAAlB;AAWP,gBAAe,CAACC,KAAK,GAAGT,SAAT,EAAoB;AAAEU,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,UAAQD,IAAR;AACI,SAAKnB,KAAL;AACI,UAAIoB,OAAO,CAACG,OAAR,KAAoB,WAAxB,EACI,OAAO,EACH,GAAGL,KADA;AAEHR,QAAAA,YAAY,EAAEU;AAFX,OAAP,CADJ,KAMII,KAAK,CAACJ,OAAO,CAACG,OAAT,CAAL;AACA;;AACR,SAAKtB,MAAL;AACIuB,MAAAA,KAAK,CAACJ,OAAO,CAACG,OAAT,CAAL;AACA,aAAO,EACH,GAAGL,KADA;AAEHP,QAAAA,aAAa,EAACS,OAAO,CAACG;AAFnB,OAAP;;AAIJ,SAAKrB,eAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHN,QAAAA,WAAW,EAAEQ,OAAO,CAACK;AAFlB,OAAP;;AAIJ,SAAKtB,UAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHL,QAAAA,SAAS,EAACO;AAFP,OAAP;;AAIJ,SAAKhB,aAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHJ,QAAAA,aAAa,EAACM,OAAO,CAACK,IAFnB;AAGHT,QAAAA,WAAW,EAAC;AAHT,OAAP;;AAKJ,SAAKX,MAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHR,QAAAA,YAAY,EAAC;AAFV,OAAP;;AAIJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,WAAW,EAACK;AAFT,OAAP;;AAIJ,SAAKM,aAAL;AACIF,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA;;AACJ,SAAKjB,WAAL;AACIiB,MAAAA,KAAK,CAACJ,OAAD,CAAL;AACA,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAACI;AAFT,OAAP;;AAIJ,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHD,QAAAA,WAAW,EAACG,OAAO,CAACK;AAFjB,OAAP;;AAIJ;AACI,aAAOP,KAAP;AAzDR;AA2DH,CA9DD","sourcesContent":["import {\n    LOGIN,\n    SIGNUP,\n    COMPANY_DETAILS,\n    ADD_TICKET,\n    TICKET_REPORT,\n    LOGOUT,\n    VIEW_TICKET,\n    EDIT_TICKET,\n    GET_COMMENTS\n} from './actionTypes'\n\n\nexport const initState = {\n    loginSuccess: [],\n    signupSuccess:\"\",\n    companyData: [],\n    ticketMsg:[],\n    allUserTicket:[],\n    view_ticket:[],\n    editSuccess:\"\",\n    getComments:[]\n}\n\nexport default (state = initState, { type, payload }) => {\n    console.log(payload)\n\n    switch (type) {\n        case LOGIN:\n            if (payload.message === 'logged_in')\n                return {\n                    ...state,\n                    loginSuccess: payload\n                }\n            else\n                alert(payload.message)\n                break\n        case SIGNUP:\n            alert(payload.message)\n            return {\n                ...state,\n                signupSuccess:payload.message\n            }\n        case COMPANY_DETAILS:\n            return {\n                ...state,\n                companyData: payload.data\n            }\n        case ADD_TICKET:\n            return {\n                ...state,\n                ticketMsg:payload\n            }\n        case TICKET_REPORT:\n            return {\n                ...state,\n                allUserTicket:payload.data,\n                editSuccess:\"\"\n            }\n        case LOGOUT:\n            return {\n                ...state,\n                loginSuccess:[]\n            }\n        case VIEW_TICKET:\n            return {\n                ...state,\n                view_ticket:payload\n            }\n        case CHANGE_STATUS:\n            alert(\"status changed successfully\")\n            break\n        case EDIT_TICKET:\n            alert(payload)\n            return {\n                ...state,\n                editSuccess:payload\n            }\n        case GET_COMMENTS:\n            return {\n                ...state,\n                getComments:payload.data\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}
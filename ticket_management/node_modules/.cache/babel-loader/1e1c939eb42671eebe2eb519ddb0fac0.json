{"ast":null,"code":"var _jsxFileName = \"/home/masai/ticket_managemant/ticket_management/src/Component/Ticket/ViewTicket.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editTicket } from '../../Redux/action';\nimport uuidv4 from 'uuid';\nimport Navbar from '../Common/Navbar';\nimport { Redirect } from 'react-router-dom';\n\nclass EditTicket extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      category: \"\",\n      priority: \"\",\n      company: \"\",\n      ticket_id: \"\"\n    };\n  } //componentDidMount = () => {\n  //     const { allUserTicket, match } = this.props\n  //     // console.log(allUserTicket,match)\n  //     const data = allUserTicket.find(item => item.id === Number(match.params.id))\n  //     this.setState({\n  //         title: data.title,\n  //         category: data.category,\n  //         priority: data.priority,\n  //         company: data.company_id,\n  //         ticket_id: data.id\n  //     })\n  //     console.log(this.state)\n  // }\n  // handleChange = (e) => {\n  //     this.setState({\n  //         [e.target.name]: e.target.value\n  //     })\n  // }\n\n\n  render() {\n    const {\n      companyData,\n      editTicket,\n      editSuccess\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"150px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"offset-3 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card border-info mb-3\",\n      style: {\n        maxWidth: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, \"Header\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, \"Info card title\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  companyData: state.companyData,\n  allUserTicket: state.allUserTicket,\n  editSuccess: state.editSuccess\n});\n\nconst mapDispatchToProps = dispatch => ({\n  editTicket: payload => dispatch(editTicket(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTicket);","map":{"version":3,"sources":["/home/masai/ticket_managemant/ticket_management/src/Component/Ticket/ViewTicket.jsx"],"names":["React","Component","connect","editTicket","uuidv4","Navbar","Redirect","EditTicket","constructor","props","state","title","category","priority","company","ticket_id","render","companyData","editSuccess","marginTop","maxWidth","mapStateToProps","allUserTicket","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,MAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH,GAX8B,CAa/B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,WAAF;AAAed,MAAAA,UAAf;AAA2Be,MAAAA;AAA3B,QAA2C,KAAKT,KAAtD;AAEA,wBACI,uDAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,uBAAX;AAAmC,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAFJ,CAFJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAmBH;;AAzD8B;;AA4DnC,MAAMC,eAAe,GAAGX,KAAK,KAAK;AAC9BO,EAAAA,WAAW,EAAEP,KAAK,CAACO,WADW;AAE9BK,EAAAA,aAAa,EAAEZ,KAAK,CAACY,aAFS;AAG9BJ,EAAAA,WAAW,EAAER,KAAK,CAACQ;AAHW,CAAL,CAA7B;;AAKA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,UAAU,EAAEsB,OAAO,IAAID,QAAQ,CAACrB,UAAU,CAACsB,OAAD,CAAX;AADK,CAAL,CAAnC;;AAGA,eAAevB,OAAO,CAClBmB,eADkB,EAElBE,kBAFkB,CAAP,CAGbhB,UAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { editTicket } from '../../Redux/action'\nimport uuidv4 from 'uuid'\nimport Navbar from '../Common/Navbar'\nimport { Redirect } from 'react-router-dom'\n\nclass EditTicket extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: \"\",\n            category: \"\",\n            priority: \"\",\n            company: \"\",\n            ticket_id: \"\"\n        }\n    }\n\n    //componentDidMount = () => {\n    //     const { allUserTicket, match } = this.props\n    //     // console.log(allUserTicket,match)\n    //     const data = allUserTicket.find(item => item.id === Number(match.params.id))\n\n    //     this.setState({\n    //         title: data.title,\n    //         category: data.category,\n    //         priority: data.priority,\n    //         company: data.company_id,\n    //         ticket_id: data.id\n    //     })\n\n    //     console.log(this.state)\n    // }\n\n    // handleChange = (e) => {\n    //     this.setState({\n    //         [e.target.name]: e.target.value\n    //     })\n    // }\n\n    render() {\n        const { companyData, editTicket, editSuccess } = this.props\n\n        return (\n            <>\n                {/* {editSuccess && editSuccess !== \"\" ? <Redirect to=\"/ticketReport\" /> : \"\"}\n                <Navbar /> */}\n                <div className=\"container\" style={{ marginTop: \"150px\" }}>\n                    <div className=\"row\">\n                        <div className=\"offset-3 col-6\">\n                            <div class=\"card border-info mb-3\" style={{maxWidth: \"18rem\"}}>\n                                <div class=\"card-header\">Header</div>\n                                <div class=\"card-body text-info\">\n                                    <h5 class=\"card-title\">Info card title</h5>\n                                    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    companyData: state.companyData,\n    allUserTicket: state.allUserTicket,\n    editSuccess: state.editSuccess\n});\nconst mapDispatchToProps = dispatch => ({\n    editTicket: payload => dispatch(editTicket(payload))\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTicket);"]},"metadata":{},"sourceType":"module"}